{
    "AWSTemplateFormatVersion" : "2010-09-09",
  
    "Description" : "Cloud Formation Template for AWS Certificate Request and Approval Functions",
  
    "Parameters" : {
      "BucketName" : {
        "Type" : "String",
        "Description" : "Bucket Name were are stored the source code of Lambda Functions. Must be in the same region were Cloud Formation is being executed!"
      }
    },
  
    "Resources" : {

        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "Tags": [
                {
                  "Key": "yor_trace",
                  "Value": "2abe88f0-2983-4463-9663-450cd8600f33"
                }
              ],
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{ "Effect": "Allow", "Principal": {"Service": ["lambda.amazonaws.com"]}, "Action": ["sts:AssumeRole"] }]
              },
              "Path": "/",
              "Policies": [{
                "PolicyName": "root",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{
                    "Effect": "Allow",
                     "Action": [
                       "lambda:InvokeFunction", 
                       "route53:GetHostedZone",
                       "route53:ListHostedZones",
                       "route53:ListHostedZonesByName",
                       "route53:ChangeResourceRecordSets",
                       "logs:CreateLogGroup",
                       "logs:PutLogEvents",
                       "logs:CreateLogStream",
                       "acm:DescribeCertificate",
                       "acm:RequestCertificate",
                       "acm:GetCertificate",
                       "acm:ListCertificates",
                       "acm:DeleteCertificate",
                       "s3:ListAllMyBuckets",
                       "s3:ListBucket",
                       "s3:GetObject",
                       "s3:DeleteObject"
                      ],
                     "Resource": "*" 
                  }]
                }
              }]
            }
        },

        "CertificateRequestFunction" : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
              "Tags": [
                {
                  "Key": "yor_trace",
                  "Value": "8b68da37-a416-4496-8152-e21568fe11b6"
                }
              ],
              "Code" : {"S3Bucket" : {"Ref": "BucketName"}, "S3Key" : "lambdas/requestCertificate.zip"},
              "Description" : "Function to be executed as part of Custom Cloud Formation Resource to Request a Public Certificate from ACM",
              "Handler" : "requestCertificate.handler",
              "MemorySize" : 128,
              "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
              "Runtime" : "nodejs10.x",
              "Timeout" : 10
            }
        },

        "CertificateApprovalFunction" : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
              "Tags": [
                {
                  "Key": "yor_trace",
                  "Value": "c6c19a7e-6556-4319-83a5-62fd6f3a6820"
                }
              ],
              "Code" : {"S3Bucket" : {"Ref": "BucketName"}, "S3Key" : "lambdas/approveCertificate.zip"},
              "Description" : "Function to be executed as part of Custom Cloud Formation Resource to approve the Public Certificate requested from ACM",
              "Handler" : "approveCertificate.handler",
              "MemorySize" : 128,
              "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
              "Runtime" : "nodejs10.x",
              "Timeout" : 10
            }
        },

        "CheckCertificateFunction" : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
              "Tags": [
                {
                  "Key": "yor_trace",
                  "Value": "7ff13ecc-4700-434b-afae-2b897177c23b"
                }
              ],
              "Code" : {"S3Bucket" : {"Ref": "BucketName"}, "S3Key" : "lambdas/checkCertificateApproval.zip"},
              "Description" : "Function to be executed as part of Custom Cloud Formation Resource to check for approval of the Public Certificate requested from ACM",
              "Handler" : "checkCertificateApproval.handler",
              "MemorySize" : 128,
              "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
              "Runtime" : "nodejs10.x",
              "Timeout" : 180
            }
        },

        "GetHostedZoneNameFunction" : {
          "Type" : "AWS::Lambda::Function",
          "Properties" : {
            "Tags": [
              {
                "Key": "yor_trace",
                "Value": "c0101cc6-c655-489e-b097-e4fae9cf6197"
              }
            ],
            "Code" : {"S3Bucket" : {"Ref": "BucketName"}, "S3Key" : "lambdas/getHostedZoneName.zip"},
            "Description" : "Function to be executed as part of Custom Cloud Formation Resource to get the HostedZone name from HostedZoneId",
            "Handler" : "getHostedZoneName.handler",
            "MemorySize" : 128,
            "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
            "Runtime" : "nodejs10.x",
            "Timeout" : 10
          }
        },

        "ClearBucketsFunction" : {
          "Type" : "AWS::Lambda::Function",
          "Properties" : {
            "Tags": [
              {
                "Key": "yor_trace",
                "Value": "1160a9e8-23f7-49e4-a644-53ba43a96dec"
              }
            ],
            "Code" : {"S3Bucket" : {"Ref": "BucketName"}, "S3Key" : "lambdas/clearBuckets.zip"},
            "Description" : "Function to be executed as part of Custom Cloud Formation Resource to clear Buckets created as part fo StaticWebSite",
            "Handler" : "clearBuckets.handler",
            "MemorySize" : 128,
            "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
            "Runtime" : "nodejs10.x",
            "Timeout" : 10
          }
        }

    },

     "Outputs" : {
        "CertificateRequestFunction" : {
          "Description" : "Function to be executed as part of Custom Cloud Formation Resource to Request a Public Certificate from ACM",
          "Value" : { "Fn::GetAtt" : ["CertificateRequestFunction", "Arn"] },
          "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-CertificateRequestFunctionArn" }}
        },
        
        "CertificateApprovalFunction" : {
          "Description" : "Function to be executed as part of Custom Cloud Formation Resource to approve the Public Certificate requested from ACM",
          "Value" : { "Fn::GetAtt" : ["CertificateApprovalFunction", "Arn"] },
          "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-CertificateApprovalFunctionArn" }}
        },

        "CheckCertificateFunction" : {
          "Description" : "Function to be executed as part of Custom Cloud Formation Resource to check for approval of the Public Certificate requested from ACM",
          "Value" : { "Fn::GetAtt" : ["CheckCertificateFunction", "Arn"] },
          "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-CheckCertificateFunctionArn" }}
        },

        "GetHostedZoneNameFunction" : {
          "Description" : "Function to be executed as part of Custom Cloud Formation Resource to get the HostedZoneName using HostedZoneId",
          "Value" : { "Fn::GetAtt" : ["GetHostedZoneNameFunction", "Arn"] },
          "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-GetHostedZoneNameFunctionArn" }}
        },

        "ClearBucketsFunction" : {
          "Description" : "Function to be executed as part of Custom Cloud Formation Resource to clear Buckets created as part fo StaticWebSite",
          "Value" : { "Fn::GetAtt" : ["ClearBucketsFunction", "Arn"] },
          "Export" : {"Name" : {"Fn::Sub": "${AWS::StackName}-ClearBucketsFunctionArn" }}
        }

     }
}
